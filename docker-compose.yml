version: '3.8'

services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "5002:3100"
    environment:
      - LOKI_HTTP_PORT=3100
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "5000:5000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=5000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prom-server
    ports:
      - "5001:9090"
    volumes:
      - prometheus_data:/prometheus-config.yml
      - ./prometheus-config.yml:/etc/prometheus-config.yml/prometheus-config.yml.yml
    restart: unless-stopped

  express-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-app
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
    depends_on:
      - prometheus
    restart: unless-stopped

  backup:
    image: appropriate/curl
    container_name: backup
    volumes:
      - loki_data:/source_loki
      - grafana_data:/source_grafana
      - prometheus_data:/source_prometheus
      - ./backup:/backup
    command: >
      sh -c "sleep 6h && tar -czf /backup/backup_$(date +%Y%m%d_%H%M%S).tar.gz -C /source_loki . -C /source_grafana . -C /source_prometheus ."
    restart: unless-stopped

volumes:
  loki_data:
  grafana_data:
  prometheus_data:
